plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.example.retrofitfulltest"
        minSdk 29
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //здесь начинается добавленный модуль
    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("app.properties").newDataInputStream())
        def apiKey  = properties.getProperty("WEATHER_API_KEY", "")
        it.buildConfigField "String", "WEATHER_API_KEY", apiKey
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    //здесь заканчивается

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //Retrofit - знакомая нам по прошлому курсу библиотека
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.2'
    //Kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.21"
    implementation 'androidx.core:core-ktx:1.6.0'
    //AppCompat
    implementation 'androidx.appcompat:appcompat:1.3.1'
    //Lifecycle and ViewModel (архитектурные компоненты)
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    //Koil image download (аналог Picasso и Glide, написанный на Kotlin)
    implementation("io.coil-kt:coil:0.11.0")

    //timeZoneMap
    implementation('us.dustinj.timezonemap:timezonemap:4.0') {
        // Exclude standard compression library
        exclude group: 'com.github.luben', module: 'zstd-jni'
    }
    implementation 'com.github.luben:zstd-jni:1.4.4-3@aar'

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    apply plugin: 'kotlin-android-extensions'
}